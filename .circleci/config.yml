# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
# This file originated from NumPy and was modified for use with this package
version: 2
jobs:
  build:
    docker:
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # circleci/python3.8 images come with old versions of Doxygen(1.6.x),
      # therefore a new base image chose instead to guarantee to
      # have a newer version >= 1.8.10 to avoid warnings
      # that related to the default behaviors or non-exist config options
      - image: cimg/base:2021.05

    working_directory: ~/repo

    steps:
      - checkout:

      - run:
          name: Check-skip
          command: |
            export git_log=$(git log --max-count=1 --pretty=format:"%B" | tr "\n" " ")
            echo "Got commit message:"
            echo "${git_log}"
            if [[ -v CIRCLE_PULL_REQUEST ]] && \
               ([[ "$git_log" == *"[skip circle]"* ]] || \
                [[ "$git_log" == *"[circle skip]"* ]])
            then
              echo "Skip detected, exiting job ${CIRCLE_JOB} for PR ${CIRCLE_PULL_REQUEST}."
              circleci-agent step halt;
            fi
      
      - run:
          name: pull changes from merge
          command: |
            if [[ -v CI_PULL_REQUEST ]] ; then git pull --ff-only origin "refs/pull/${CI_PULL_REQUEST//*pull\//}/merge" ; fi
      
      - run:
          name: update submodules
          command: |
            git submodule init
            git submodule update
      
      - run:
          name: create virtual environment, install dependencies
          command: |
            sudo apt-get update
            sudo apt-get install build-essential curl zip unzip tar ninja-build
            sudo apt-get install -y python3.8 python3.8-dev python3-venv doxygen
      
      - run:
          name: build openpiv-cxx
          command: |
            pip install --upgrade -r requirements/build.txt
            pip install --upgrade -r requirements/depend.txt
            pip install --upgrade -r requirements/docs.txt
            pip install --upgrade -r requirements/test.txt
            pip install --no-build-isolation .
      
      - run:
          name: build docs
          no_output_timeout: 30m
          command: |
            cd docs
            make clean
            SPHINXOPTS="-j4 -q" make -e html

      - store_artifacts:
          path: doc/build/html/


