name: Build wheels

on:
  # Trigger on pushes to the mainline branches and version tags. This prevents building commits
  # twice when the pull request source branch is in the same repository.
  push:
    branches:
      - "master"
    tags:
      - "v*"

  pull_request:
      types: [opened, labeled, reopened, synchronize]

jobs:
  build_wheels:
    name: Build wheel for ${{ matrix.os }}, Python ${{ matrix.pyver }}
    runs-on: ${{ matrix.os }}
    if: ${{ contains(github.event.pull_request.labels.*.name, 'build_wheels') || github.event_name != 'pull_request' }}
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-12, windows-2019]
        pyver: ["3.6", "3.7", "3.8", "3.9", "3.10"]

    steps:
      - uses: actions/checkout@v3.0.2
        with:
          submodules: "recursive"

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.10.2
        env:
          # Build for cpython >= 3.6.
          CIBW_PROJECT_REQUIRES_PYTHON: "==${{ matrix.pyver }}.*"
          CIBW_SKIP: "{pp*,*-musllinux_*}"

          # Build only on 64-bit architectures.
          CIBW_ARCHS_MACOS: "x86_64 arm64"
          CIBW_ARCHS_LINUX: auto64
          CIBW_ARCHS_WINDOWS: auto64
          CIBW_TEST_COMMAND: "cd {package}/tests && pytest . -v --log-level=DEBUG -n auto"

      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    if: ${{ contains(github.event.pull_request.labels.*.name, 'build_wheels') }} || github.event_name != 'pull_request' }}
    steps:
      - uses: actions/checkout@v3.0.2
        with:
          submodules: "recursive"

      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: '3.8'

      - name: Install build requirements
        run: python3 -m pip install cmake ninja setuptools scikit-build numpy imageio --upgrade --progress-bar=off

      - name: Build sdist
        run: python setup.py sdist

      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/*.tar.gz

  upload_pypi:
    name: Publish [PyPI]
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist

      - name: Check files
        run: ls -lR dist

      - name: Upload to TestPyPI
        if: ${{ !startsWith(github.ref, 'refs/tags/v') && (github.event_name != 'pull_request' || (github.event.pull_request.head.repo.full_name == github.repository && github.actor != 'dependabot[bot]')) }}
        uses: pypa/gh-action-pypi-publish@v1.5.1
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
          skip_existing: true
